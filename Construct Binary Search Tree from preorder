/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode* root=new TreeNode();
        if(preorder.size()==0)
        {
            return NULL;
        }
        root->val=preorder[0];
        vector<int> l;
        vector<int> r;
        for(int i=1;i<preorder.size();i++)
        {
            if(preorder[i]<preorder[0])
            {
               l.push_back(preorder[i]); 
            }
            else
            {
                r.push_back(preorder[i]); 
            }   
        }
         root->left=bstFromPreorder(l); 
         root->right= bstFromPreorder(r);      
        // if(l.size()!=0)
        // {
        //     root->left=bstFromPreorder(l);
        // }
        // if(r.size()!=0)
        // {
        // root->right= bstFromPreorder(r);
        // }
        return root;
    }
};
