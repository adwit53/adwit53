/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p == nullptr && q == nullptr) // Same tree
            return true; 
        if(p == nullptr || q == nullptr) // Different size
            return false; 
        if(p->val != q->val) // Different Nodes
            return false; 
        return isSameTree(p->left,q->left) && // check left subtree
               isSameTree(p->right,q->right); // check right subtree
    }
};
