/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
stack<TreeNode*> s;
    void flatten(TreeNode* root) {
        if(root==NULL)
        {
            return;
        }
        if(root->right==NULL && root->left==NULL)
        {
            if(s.size()>0)
            {
                root->right=s.top();
                s.pop();
                flatten(root->right);
            }
            else
            {
                return;
            }
        }
        else if(root->left==NULL)
        {
            flatten(root->right);
        }
        else
        {
            if(root->right!=NULL)
            {
                s.push(root->right);
            }

        root->right=root->left;
        root->left=NULL;
        flatten(root->right);
        }

    }
};
