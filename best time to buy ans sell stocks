class Solution {
public:
    int maxProfit(vector<int>& prices, int fee) {
            vector<vector<int>> dp(prices.size()+1,vector<int>(2,-1));
        return recurs(prices,fee,0,0,dp);

    }
    int recurs(vector<int>& prices, int fee,int i, int b,vector<vector<int>> &dp)
    {
        if(i==prices.size())
        {
            return dp[i][b]=0;
        }
        if(dp[i][b]!=-1)
        {
            return(dp[i][b]);
        }
        if(b==0)
        {
            return dp[i][b]=max(-prices[i]+recurs(prices,fee,i+1,1,dp),recurs(prices,fee,i+1,0,dp));
        }
        else
        {
            return dp[i][b]=(max(prices[i]-fee+recurs(prices,fee,i+1,0,dp),recurs(prices,fee,i+1,1,dp)));
        }
    }
};
