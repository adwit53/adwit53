class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> m;
        for(int i=0;i<nums.size();i++)
        {
            m[nums[i]]++;
        }
        priority_queue <pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
         for(auto i=m.begin();i!=m.end();i++)
        {
            pq.push(make_pair(i->second,i->first));
            if(pq.size()>k)
            {
                pq.pop();
            }
        }
        vector<int> ans;
        // pair<int, int> top = pq.top();
        int n=pq.size();
        for(int i=0;i<n;i++)
        {
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};
