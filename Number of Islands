class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        queue<pair<int,int>> q;
        int c=0;
        int a,b=0;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[i].size();j++)
            {
                if(grid[i][j]=='1')
                {
                    q.push({i,j});
                    c++;
                    grid[i][j]=-1;
                    while(!q.empty())
                    {
                        a=q.front().first;
                        b=q.front().second;
                        q.pop();
                        if((b+1)<grid[i].size() && grid[a][b+1]=='1')
                        {
                            q.push({a,b+1});
                            grid[a][b+1]=-1;
                        }
                        if((a+1)<grid.size() && grid[a+1][b]=='1')
                        {
                            q.push({a+1,b});
                            grid[a+1][b]=-1;
                        }
                        if((a-1)>=0 && grid[a-1][b]=='1')
                        {
                            q.push({a-1,b});
                            grid[a-1][b]=-1;
                        }
                        if((b-1)>=0 && grid[a][b-1]=='1')
                        {
                            q.push({a,b-1});
                            grid[a][b-1]=-1;
                        }
                    }

                }
                
            }
            
        }
        return c;
    }
};
